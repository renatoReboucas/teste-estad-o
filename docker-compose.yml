services:
  db:
    image: postgres:13
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - news-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - "${PORT:-3366}:3366"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_HOST: db
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public"
      NODE_ENV: development
    restart: on-failure
    networks:
      - news-network
    volumes:
      - ./backend/logs:/app/logs

  frontend:
    build:
      context: ./front
    container_name: frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"
    env_file:
      - ./front/.env
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:3366
    networks:
      - news-network

volumes:
  postgres_data:
    name: postgres_data_new

networks:
  news-network:
    driver: bridge
